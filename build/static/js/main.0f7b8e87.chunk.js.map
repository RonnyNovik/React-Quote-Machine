{"version":3,"sources":["containers/layout/Layout.module.css","components/Nav/Nav.module.css","components/NavItem/NavItem.module.css","components/WaveContainer/WaveContainer.module.css","components/Logo/Logo.js","components/NavItem/NavItem.js","components/Nav/Nav.js","components/WaveContainer/WaveContainer.js","components/aboutus/AboutUs.js","containers/layout/Layout.js","App.js","serviceWorker.js","index.js","components/aboutus/AboutUs.module.css"],"names":["module","exports","Layout","emailLink","fadeIn","fadeOut","NavContainer","dot","NavItem","WaveContainer","waveBot","move_wave","waveMid","waveTop","Logo","props","react_default","a","createElement","height","width","viewBox","d","transform","fill","stroke","strokeWidth","onClick","click","className","classes","icon","text","Nav","components_NavItem_NavItem","AboutUs","AboutContainer","AboutTitle","AboutText","state","toggleAbout","toggleShowAboutHanlder","_this","setState","components_Logo_Logo","react_transition_group","unmountOnExit","key","in","this","timeout","classNames","aboutus_AboutUs","href","components_WaveContainer_WaveContainer","components_Nav_Nav","Component","App","layout_Layout","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"4EACAA,EAAAC,QAAA,CAAkBC,OAAA,uBAAAC,UAAA,0BAAAC,OAAA,uBAAAC,QAAA,6CCAlBL,EAAAC,QAAA,CAAkBK,aAAA,0BAAAC,IAAA,sCCAlBP,EAAAC,QAAA,CAAkBO,QAAA,iFCAlBR,EAAAC,QAAA,CAAkBQ,cAAA,qCAAAC,QAAA,+BAAAC,UAAA,iCAAAC,QAAA,+BAAAC,QAAA,oOCSHC,SARF,SAACC,GAAD,OACXC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKC,OAAO,MAAMC,MAAM,MAAMC,QAAQ,eAAcL,EAAAC,EAAAC,cAAA,wBAAsBF,EAAAC,EAAAC,cAAA,QAAMI,EAAE,8FAA8FC,UAAU,iBAAiBC,KAAK,OAAOC,OAAO,UAAUC,YAAY,QACpPV,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,0DCGWV,EAPC,SAACO,GAAD,OACdC,EAAAC,EAAAC,cAAA,OAAKS,QAASZ,EAAMa,MAAOC,UAAWC,IAAQtB,SAC7CQ,EAAAC,EAAAC,cAAA,KAAGW,UAAWd,EAAMgB,OACpBf,EAAAC,EAAAC,cAAA,SAAIH,EAAMiB,yBCMEC,EARH,SAAClB,GAAD,OACVC,EAAAC,EAAAC,cAAA,OAAKW,UAAWC,IAAQxB,cACtBU,EAAAC,EAAAC,cAACgB,EAAD,CAASN,MAAOb,EAAMa,MAAOG,KAAK,8BAA8BC,KAAK,SACrEhB,EAAAC,EAAAC,cAAA,QAAMW,UAAWC,IAAQvB,MACzBS,EAAAC,EAAAC,cAACgB,EAAD,CAASH,KAAK,2BAA4BC,KAAK,yBCMpCvB,EAXO,SAACM,GAAD,OACpBC,EAAAC,EAAAC,cAAA,OAAKW,UAAWC,IAAQrB,eACvBO,EAAAC,EAAAC,cAAA,OAAKW,UAAWC,IAAQpB,UAExBM,EAAAC,EAAAC,cAAA,OAAKW,UAAWC,IAAQlB,UAExBI,EAAAC,EAAAC,cAAA,OAAKW,UAAWC,IAAQjB,4BCEZsB,EARC,kBACdnB,EAAAC,EAAAC,cAAA,OAAKW,UAAWC,IAAQM,gBACtBpB,EAAAC,EAAAC,cAAA,MAAIW,UAAWC,IAAQO,YAAvB,YACArB,EAAAC,EAAAC,cAAA,KAAGW,UAAWC,IAAQQ,WAAtB,iNC4BWpC,6MAzBbqC,MAAQ,CACNC,aAAa,KAGfC,uBAAyB,WACvBC,EAAKC,SAAS,CAACH,aAAcE,EAAKH,MAAMC,uFAGxC,OACExB,EAAAC,EAAAC,cAAA,OAAKW,UAAWC,IAAQ5B,QACxBc,EAAAC,EAAAC,cAAC0B,EAAD,MACA5B,EAAAC,EAAAC,cAAC2B,EAAA,cAAD,CAAeC,eAAa,EAACC,IAAI,OAAOC,GAAIC,KAAKV,MAAMC,YAAaU,QAAS,IAAKC,WAAW,QAC5F,SAAAZ,GAAK,OAAIvB,EAAAC,EAAAC,cAACkC,EAAD,QAEVpC,EAAAC,EAAAC,cAAC2B,EAAA,cAAD,CAAgBE,IAAI,QAAQC,IAAKC,KAAKV,MAAMC,YAAaU,QAAS,IAAKC,WAAW,QACjF,SAAAZ,GAAK,OAAIvB,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAGmC,KAAK,IAAIxB,UAAWC,IAAQ3B,WAA/B,2BAEda,EAAAC,EAAAC,cAACoC,EAAD,MACAtC,EAAAC,EAAAC,cAACqC,EAAD,CAAK3B,MAAOqB,KAAKR,iCAnBFe,aCMNC,0LARX,OACEzC,EAAAC,EAAAC,cAAA,OAAKW,UAAU,OACfb,EAAAC,EAAAC,cAACwC,EAAD,cAJYF,cCSEG,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OAAOjD,EAAAC,EAAAC,cAACgD,EAAD,MAASC,SAASC,eAAe,SD0H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,kCElInB1E,EAAAC,QAAA,CAAkBmC,eAAA,gCAAAC,WAAA,4BAAAC,UAAA","file":"static/js/main.0f7b8e87.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout_Layout__144n6\",\"emailLink\":\"Layout_emailLink__3onkM\",\"fadeIn\":\"Layout_fadeIn__3sNzB\",\"fadeOut\":\"Layout_fadeOut__3meST\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavContainer\":\"Nav_NavContainer__1UHJB\",\"dot\":\"Nav_dot__2O9gJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavItem\":\"NavItem_NavItem__20P5i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"WaveContainer\":\"WaveContainer_WaveContainer__3saUy\",\"waveBot\":\"WaveContainer_waveBot__2kRhL\",\"move_wave\":\"WaveContainer_move_wave__2esKo\",\"waveMid\":\"WaveContainer_waveMid__ejnEw\",\"waveTop\":\"WaveContainer_waveTop__SROGB\"};","import React from 'react';\r\nimport classes from './Logo.module.css'\r\nconst Logo = (props) => (\r\n  <div>\r\n    <svg height=\"230\" width=\"230\" viewBox=\"0 0 350 400\"><title>pyramid</title><path d=\"M171.12,21.76,17.77,300.16H324.48Zm9.06,176.36V292H159.32V198.12H127.05V177.91h85.41v20.21Z\" transform=\"translate(0 0)\" fill=\"none\" stroke=\"#40cdde\" strokeWidth=\"21\"/></svg>\r\n    <h1>TEMPLE</h1>\r\n    <h2>PYRAMID</h2>\r\n  </div>\r\n);\r\n\r\nexport default Logo;\r\n","import React from 'react';\r\nimport classes from './NavItem.module.css'\r\nconst NavItem = (props) => (\r\n  <div onClick={props.click} className={classes.NavItem}>\r\n   <i className={props.icon}></i>\r\n   <p>{props.text}</p>\r\n  </div>\r\n);\r\n\r\nexport default NavItem;\r\n","import React from 'react';\r\nimport NavItem from '../NavItem/NavItem';\r\nimport classes from './Nav.module.css'\r\nconst Nav = (props) => (\r\n  <div className={classes.NavContainer}>\r\n    <NavItem click={props.click} icon=\"fa fas fa-info-circle fa-3x\" text=\"INFO\"/>\r\n    <span className={classes.dot}></span>\r\n    <NavItem icon=\"fa ab fa-instagram fa-3x\"  text=\"IG\"/>\r\n  </div>\r\n);\r\n\r\nexport default Nav;\r\n","import React from 'react';\r\nimport classes from './WaveContainer.module.css'\r\nconst WaveContainer = (props) => (\r\n  <div className={classes.WaveContainer}>\r\n   <div className={classes.waveBot}>\r\n   </div>\r\n   <div className={classes.waveMid}>\r\n   </div>\r\n   <div className={classes.waveTop}>\r\n   </div>\r\n  </div>\r\n);\r\n\r\nexport default WaveContainer;\r\n","import React from 'react';\r\nimport classes from './AboutUs.module.css';\r\nconst AboutUs = () => (\r\n  <div className={classes.AboutContainer}>\r\n    <h1 className={classes.AboutTitle}>ABOUT US</h1>\r\n    <p className={classes.AboutText}>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis dapibus orci a ipsum bibendum congue. Nunc dictum tortor vitae laoreet tincidunt. Cras purus erat, blandit vitae eleifend at, elementum quis.\r\n    </p>\r\n  </div>\r\n);\r\n\r\nexport default AboutUs;\r\n","import React, { Component } from 'react';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport Logo from '../../components/Logo/Logo';\r\nimport classes from './Layout.module.css';\r\nimport Nav from '../../components/Nav/Nav';\r\nimport WaveContainer from '../../components/WaveContainer/WaveContainer';\r\nimport AboutUs from '../../components/aboutus/AboutUs';\r\nclass Layout extends Component {\r\n  state = {\r\n    toggleAbout: false\r\n  }\r\n  /*Toggle About Section */\r\n  toggleShowAboutHanlder = () => {\r\n    this.setState({toggleAbout: !this.state.toggleAbout});\r\n  }\r\n  render() {\r\n    return (\r\n      <div className={classes.Layout}>\r\n      <Logo />\r\n      <CSSTransition unmountOnExit key=\"text\" in={this.state.toggleAbout} timeout={600} classNames=\"fade\">\r\n      {state => <AboutUs />}\r\n      </CSSTransition>\r\n      <CSSTransition  key=\"email\" in={!this.state.toggleAbout} timeout={600} classNames=\"fade\">\r\n      {state => <h1><a href=\"#\" className={classes.emailLink}>HELLO@PYRAMIDART.COM</a></h1>}\r\n      </CSSTransition>\r\n      <WaveContainer />\r\n      <Nav click={this.toggleShowAboutHanlder} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default Layout;\r\n","import React, { Component } from 'react';\nimport Layout from './containers/layout/Layout';\nimport './App.css';\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n      <Layout />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'font-awesome/css/font-awesome.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AboutContainer\":\"AboutUs_AboutContainer__C9dyI\",\"AboutTitle\":\"AboutUs_AboutTitle__1Iorh\",\"AboutText\":\"AboutUs_AboutText__JG0Is\"};"],"sourceRoot":""}